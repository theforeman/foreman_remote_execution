<% if job_invocation.resolved? %>
  <%= form_with url: job_invocation_path(job_invocation), method: "get", id: "search-form" do |f| %>
    <div class="row">
      <div class="title_filter col-md-6">
        <div class="input-group">
            <%= autocomplete_f(f, :search, value: params[:search].try(:squeeze, " "), placeholder: _("Filter") + ' ...', path: hosts_path, only_input: true) %>
            <span class="input-group-btn">
              <button class="btn btn-default" type="submit">
                <%= icon_text('search', content_tag(:span, _('Search'), :class => 'hidden-xs', :kind => 'fa')) %>
              </button>
            </span>
        </div>
      </div>
    </div>
  <% end %>
  <br>

  <div id="targeting_hosts">
    <%= mount_react_component('TargetingHosts', '#targeting_hosts') %>
  </div>
  <%= will_paginate_with_info @hosts, :container => true %>
<% else %>
  <div class="alert alert-warning">
    <%=
        _("The dynamic query '%{query}' was not resolved yet. The list of hosts to which it would resolve now can be seen %{here}." %
            { :query => job_invocation.targeting.search_query,
              :here => link_to(_('here'), hosts_url(:search => job_invocation.targeting.search_query))})
     %>
  </div>
<% end %>
